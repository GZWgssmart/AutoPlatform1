<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gs.dao.IncomingOutgoingDAO">
    <resultMap id="incomingOutgoingMap" type="com.gs.bean.IncomingOutgoing">
        <id column="inOutId" property="inOutId" jdbcType="VARCHAR"/>
        <result column="companyId" property="companyId" jdbcType="VARCHAR"/>
        <result column="inTypeId" property="inTypeId" jdbcType="VARCHAR"/>
        <result column="outTypeId" property="outTypeId" jdbcType="VARCHAR"/>
        <result column="inOutMoney" property="inOutMoney" jdbcType="DOUBLE"/>
        <result column="inOutCreatedUser" property="inOutCreatedUser" jdbcType="VARCHAR"/>
        <result column="inOutCreatedTime" property="inOutCreatedTime" jdbcType="TIMESTAMP"/>
        <result column="inOutStatus" property="inOutStatus" jdbcType="VARCHAR"/>

        <association property="incomingType" javaType="com.gs.bean.IncomingType">
            <id column="inType_id" property="inTypeId"/>
            <result column="inTypeName" property="inTypeName"/>
        </association>

        <association property="outgoingType" javaType="com.gs.bean.OutgoingType">
            <id column="outType_id" property="outTypeId"/>
            <result column="outTypeName" property="outTypeName"/>
        </association>

        <association property="user" javaType="com.gs.bean.User">
            <id column="userId" property="userId"/>
            <result column="userName" property="userName"/>
        </association>

        <association property="company" javaType="com.gs.bean.Company">
            <id column="companyId" property="companyId"/>
        </association>
    </resultMap>

    <select id="count" resultType="int" parameterType="com.gs.bean.User">
    <![CDATA[

      select count(*) from t_incoming_outgoing i, t_company c where c.companyId = i.companyId and  i.inOutStatus = 'Y'

        ]]>
        <if test="companyId != '' and companyId != null">
            and io.companyId = #{companyId}
        </if>
        limit #{beginIndex}, #{pageSize}
  </select>

    <select id="queryByPager" resultMap="incomingOutgoingMap" parameterType="com.gs.common.bean.Pager">
        <![CDATA[

      select io.*,i.inTypeId as inType_id, i.inTypeName,o.outTypeId as outType_id,o.outTypeName,u.userId ,u.userName from t_incoming_outgoing io
				LEFT JOIN t_incoming_type i on io.inTypeId = i.inTypeId
				LEFT JOIN t_outgoing_type o on io.outTypeId = o.outTypeId
				LEFT JOIN  t_user u on io.inOutCreatedUser = u.userId
				where  io.inOutStatus = 'Y'
				order by io.inOutCreatedTime Desc
    ]]>
        <if test="user.companyId != '' and user.companyId != null">
            and io.companyId = #{user.companyId}
        </if>
    limit #{beginIndex}, #{pageSize}
  </select>


    <select id="queryByCondition" resultMap="incomingOutgoingMap"  parameterType="com.gs.bean.User">
    <![CDATA[
        select SUM(inOutMoney) as inOutMoney,inOutCreatedTime from t_incoming_outgoing io
 where inOutStatus = 'Y' and  inOutCreatedTime >= #{start} and inOutCreatedTime <= #{end}
        ]]>
        <if test="companyId != '' and companyId != null">
            and io.companyId = #{companyId}
        </if>
        <if test="inOutType ==0">

        </if>
        <if test="inOutType ==1">
            and io.outTypeId is not null
        </if>
        <if test="inOutType ==2">
            and io.inTypeId is not null
        </if>
        <if test="type =='year'">
            GROUP BY year(io.inOutCreatedTime)  ORDER BY io.inOutCreatedTime ASC;
        </if>
        <if test="type =='quarter'">
            group by concat(date_format(io.inOutCreatedTime, '%Y'),FLOOR((date_format(io.inOutCreatedTime, '%m')+2)/3)) ORDER BY io.inOutCreatedTime ASC;
        </if>
        <if test="type =='month'">
            GROUP BY month(io.inOutCreatedTime) ORDER BY io.inOutCreatedTime ASC;
        </if>
        <if test="type =='week'">
            GROUP BY week(io.inOutCreatedTime) ORDER BY io.inOutCreatedTime ASC;
        </if>
        <if test="type =='day'">
            GROUP BY day(io.inOutCreatedTime) ORDER BY io.inOutCreatedTime ASC;
        </if>
  </select>


    <select id="countByDisable" resultType="int" parameterType="com.gs.bean.User">
    <![CDATA[

        select count(*) from t_incoming_outgoing io where  i.inOutStatus = 'N'

        ]]>
        <if test="companyId != '' and companyId != null">
            and io.companyId = #{companyId}
        </if>
  </select>

    <select id="queryByPagerDisable" resultMap="incomingOutgoingMap" parameterType="com.gs.common.bean.Pager">
        <![CDATA[

         select io.*,i.inTypeId as inType_id, i.inTypeName,o.outTypeId as outType_id,o.outTypeName,u.userId ,u.userName from t_incoming_outgoing io
				LEFT JOIN t_incoming_type i on io.inTypeId = i.inTypeId
				LEFT JOIN t_outgoing_type o on io.outTypeId = o.outTypeId
				LEFT JOIN  t_user u on io.inOutCreatedUser = u.userId
				where  io.inOutStatus = 'N'
				order by io.inOutCreatedTime Desc
    ]]>
        <if test="user.companyId != '' and user.companyId != null">
            and io.companyId = #{user.companyId}
        </if>
    limit #{beginIndex}, #{pageSize}
  </select>


    <insert id="insert" useGeneratedKeys="true" keyProperty="inOutId" parameterType="incomingOutgoing">
    <![CDATA[

        insert into t_incoming_outgoing(inOutId, companyId, inTypeId, outTypeId,inOutMoney,inOutCreatedUser,inOutCreatedTime,inOutStatus) values(uuid(),#{companyId}, #{inTypeId}, #{outTypeId}, #{inOutMoney}, #{inOutCreatedUser}, now(),'Y')

        ]]>
  </insert>

    <update id="update" keyProperty="inOutId" parameterType="incomingOutgoing">
    <![CDATA[

        update t_incoming_outgoing set inTypeId = #{inTypeId},companyId = #{companyId}, outTypeId = #{outTypeId}, inOutMoney = #{inOutMoney}, inOutCreatedUser = #{inOutCreatedUser} where inOutId = #{inOutId}

        ]]>
  </update>

    <!--冻结数据-->
    <update id="inactive" keyProperty="inOutId" parameterType="incomingOutgoing">
    <![CDATA[

        update t_incoming_outgoing set inOutStatus = 'N' where inOutId = #{outTypeId}

        ]]>
  </update>

    <!--激活数据-->
    <update id="active" keyProperty="inOutId" parameterType="incomingOutgoing">
    <![CDATA[

        update t_incoming_outgoing set inOutStatus = 'Y' where inOutId = #{outTypeId}

        ]]>
  </update>


</mapper>